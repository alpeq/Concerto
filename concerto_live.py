"""
Concerto for Texel Chip
@alpeq
"""

from texel_params import *
from helpers.concerto_classes import *


#hardware_subject = NeuroListener_Texel(parameters, flags)
# is timestamps in microseconds? diff() /1000 and sleep? is sleep in millis?

timestamps = [1325, 1648, 2131, 4874, 5194, 6151, 8340, 8871, 10334, 11881, 12831, 14678, 15495, 16900, 19136, 19457, 21081, 22907, 23726, 25340, 26701, 28418, 29682, 30545, 33208, 34104, 34447, 38078, 38398, 38719, 42382, 43078, 43398, 46408, 47840, 48161, 50479, 52567, 53305, 54610, 57363, 58550, 58870, 62228, 62976, 63879, 67132, 67453, 69244, 71461, 72135, 74720, 75765, 77196, 80103, 80424, 82315, 84479, 85890, 87494, 88877, 91567, 92724, 93314, 97330, 97780, 98100, 102289, 103164, 103484, 106847, 108783, 109103, 111423, 114263, 115101, 116025, 119816, 120685, 121204, 125366, 125686, 127386, 130094, 131110, 133684, 134858, 136876, 139665, 140051, 142735, 144510, 146498, 148671, 149402, 153044, 154319, 154661, 159288, 159694, 160756, 164304, 166454, 166931, 169374, 173227, 173547, 174501, 179599, 179919, 180327, 184862, 186037, 187421, 190134, 192609, 194663, 195455, 199305, 200821, 202026, 206089, 206409, 209514, 211706, 213033, 217161, 217481, 220090, 222859, 224973, 227290, 228522, 232917, 234273, 234639, 240058, 241066, 242151, 245942, 249458, 249822, 251914, 257648, 257969, 258289, 264066, 265691, 266863, 270271, 273896, 275908, 276582, 282340, 282984, 285179, 289461, 290980, 294774, 296055, 299908, 302725, 304643, 309111, 309519, 314771, 316418, 318565, 323419, 325242, 328306, 330538, 336086, 337816, 338405, 345190, 347351, 348861, 352737, 359161, 359767, 360466, 368332, 371096, 371511, 376367, 382976, 384530, 384850, 393067, 395461, 398227, 401735, 408678, 410623, 412840, 419768, 422714, 428536, 429233, 437782, 438943, 445541, 448985, 453902, 459402, 464001, 470168, 471629, 481390, 484716, 491318, 493060, 505184, 508101, 513568, 517988, 531371, 536225, 540033, 545633, 560859, 574726, 576165, 576986, 594477, 613790, 635791, 661815, 695072]
n_id = [1, 10, 20, 10, 1, 20, 10, 1, 20, 10, 1, 20, 10, 1, 20, 10, 1, 10, 20, 1, 10, 20, 1, 10, 20, 1, 10, 20, 10, 1, 10, 20, 1, 10, 1, 20, 10, 1, 20, 10, 1, 20, 10, 1, 10, 20, 1, 10, 20, 10, 1, 20, 10, 1, 10, 20, 1, 10, 20, 1, 10, 20, 1, 10, 20, 10, 1, 10, 20, 1, 10, 1, 20, 10, 1, 20, 10, 1, 10, 20, 10, 1, 20, 10, 1, 20, 10, 1, 10, 20, 1, 10, 20, 1, 10, 20, 10, 1, 10, 20, 1, 10, 20, 1, 10, 1, 20, 10, 1, 10, 20, 10, 1, 20, 10, 1, 20, 10, 1, 10, 20, 1, 10, 20, 10, 1, 20, 10, 1, 10, 20, 1, 10, 20, 10, 1, 10, 20, 1, 10, 20, 1, 10, 1, 10, 20, 10, 1, 20, 10, 1, 20, 10, 1, 10, 20, 10, 1, 20, 10, 1, 10, 20, 1, 10, 20, 10, 1, 10, 20, 1, 10, 20, 10, 1, 10, 20, 1, 10, 20, 1, 10, 10, 1, 20, 10, 1, 20, 10, 10, 1, 20, 10, 1, 10, 20, 10, 1, 20, 10, 1, 10, 20, 10, 1, 10, 20, 10, 1, 10, 20, 1, 10, 10, 20, 1, 10, 10, 20, 1, 10, 10, 1, 20, 10, 10, 10, 10, 10, 10]

config_sheet = Config('helpers/config_orchestra.yaml', 'brain_to_wave')

hwdummy_sub = NeuroListener(timestamps*100, n_id*100) # it does not handle 1000, max_queue 300 does not help
midi_gen = OrchestraGenerator(config_sheet, debug=False)

hwdummy_sub.attach(midi_gen)
hwdummy_sub.start_streaming_events()

print("Press Enter to exit...")
input()
print("Exiting...")
midi_gen.silence()
midi_gen.cleanup()